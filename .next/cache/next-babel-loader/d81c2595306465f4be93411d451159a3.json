{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ResourceListWithProducts = () => {\n  const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n  const Context = Context();\n  return __jsx(Query, {\n    query: GET_PRODUCTS_BY_ID,\n    variables: {\n      ids: store.get('ids')\n    }\n  }, ({\n    data,\n    loading,\n    error\n  }) => {\n    if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n    if (error) return __jsx(\"div\", null, error.message);\n    return __jsx(Card, null, __jsx(ResourceList, {\n      showHeader: true,\n      resourceName: {\n        singular: 'Product',\n        plural: 'Products'\n      },\n      items: data.nodes,\n      renderItem: item => {\n        const media = __jsx(Thumbnail, {\n          source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n          alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n        });\n\n        const price = item.variants.edges[0].node.price;\n        return __jsx(ResourceList.Item, {\n          id: item.id,\n          media: media,\n          accessibilityLabel: `View details for ${item.title}`\n        }, __jsx(Stack, null, __jsx(Stack.Item, {\n          fill: true\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price)), __jsx(Stack.Item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n      }\n    }));\n  });\n};\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["C:/Users/USER/Desktop/shopify/KOA/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","Redirect","Context","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGV,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA6BA,MAAMW,wBAAwB,GAAG,MAAM;AACrC,QAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACA,QAAMP,OAAO,GAAGA,OAAO,EAAvB;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEE,kBAAd;AAAkC,IAAA,SAAS,EAAE;AAAEM,MAAAA,GAAG,EAAEP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAP;AAA7C,KACG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAD,KAA8B;AAC7B,QAAID,OAAJ,EAAa,OAAO,mCAAP;AACb,QAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACC,OAAZ,CAAP;AACX,WACE,MAAC,IAAD,QACE,MAAC,YAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,YAAY,EAAE;AAAEC,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAFhB;AAGE,MAAA,KAAK,EAAEL,IAAI,CAACM,KAHd;AAIE,MAAA,UAAU,EAAGC,IAAD,IAAU;AACpB,cAAMC,KAAK,GACT,MAAC,SAAD;AACE,UAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACIH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAD9B,GAEI,EAJR;AAME,UAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACIH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAD9B,GAEI;AATR,UADF;;AAcA,cAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,eACE,MAAC,YAAD,CAAc,IAAd;AACE,UAAA,EAAE,EAAEP,IAAI,CAACS,EADX;AAEE,UAAA,KAAK,EAAER,KAFT;AAGE,UAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM;AAHrD,WAKE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,UAAA,IAAI;AAAhB,WACE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WAA+BV,IAAI,CAACU,KAApC,CADF,CADF,CADF,EAME,MAAC,KAAD,CAAO,IAAP,QACE,sBAAKH,KAAL,CADF,CANF,EASE,MAAC,KAAD,CAAO,IAAP,QACE,gCAAepB,eAAf,MADF,CATF,CALF,CADF;AAqBD;AAzCH,MADF,CADF;AA+CD,GAnDH,CADF;AAuDD,CA3DD;;AA6DA,eAAeD,wBAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport {\r\n  Card,\r\n  ResourceList,\r\n  Stack,\r\n  TextStyle,\r\n  Thumbnail,\r\n} from '@shopify/polaris';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\nimport store from 'store-js';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ResourceListWithProducts = () => {\r\n  const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\r\n  const Context = Context();\r\n\r\n  return (\r\n    <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <div>Loadingâ€¦</div>;\r\n        if (error) return <div>{error.message}</div>;\r\n        return (\r\n          <Card>\r\n            <ResourceList\r\n              showHeader\r\n              resourceName={{ singular: 'Product', plural: 'Products' }}\r\n              items={data.nodes}\r\n              renderItem={(item) => {\r\n                const media = (\r\n                  <Thumbnail\r\n                    source={\r\n                      item.images.edges[0]\r\n                        ? item.images.edges[0].node.originalSrc\r\n                        : ''\r\n                    }\r\n                    alt={\r\n                      item.images.edges[0]\r\n                        ? item.images.edges[0].node.altText\r\n                        : ''\r\n                    }\r\n                  />\r\n                );\r\n                const price = item.variants.edges[0].node.price;\r\n                return (\r\n                  <ResourceList.Item\r\n                    id={item.id}\r\n                    media={media}\r\n                    accessibilityLabel={`View details for ${item.title}`}\r\n                  >\r\n                    <Stack>\r\n                      <Stack.Item fill>\r\n                        <h3>\r\n                          <TextStyle variation='strong'>{item.title}</TextStyle>\r\n                        </h3>\r\n                      </Stack.Item>\r\n                      <Stack.Item>\r\n                        <p>${price}</p>\r\n                      </Stack.Item>\r\n                      <Stack.Item>\r\n                        <p>Expires on {twoWeeksFromNow} </p>\r\n                      </Stack.Item>\r\n                    </Stack>\r\n                  </ResourceList.Item>\r\n                );\r\n              }}\r\n            />\r\n          </Card>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nexport default ResourceListWithProducts;\r\n"]},"metadata":{},"sourceType":"module"}